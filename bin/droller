#!/usr/bin/env bash

DIRECTORY="$HOME/.config/droller"
INDEX="$DIRECTORY/index"
HEAD="$DIRECTORY/head"

## usage: droller [s | o | 1 | -1 | ranking | edit | | <uri> | d | h]
## [status | s] # Show the selected record      # Example: droller s
## [open | o]   # Open the selected record      # Example: droller o
## [+1 | 1]     # +1 to the selected record     # Example: droller 1
## [-1 | -]     # -1 to the selected record     # Example: droller -1
## [ranking]    # Show the ranking table        # Example: droller ranking
## [random | ]  # Show the ranking table        # Example: droller
## [edit | e]   # Edit the index file           # Example: droller edit
## [<uri>]      # Add a record to the index file       # Example: droller http://www...
## [delete | d] # Delete a record from the index file  # Example: droller d
## [help | h]   # Help                                 # Example: droller h

main() {
    createFiles

    case $1 in
        "status"|"s")
            checkStatus; exit ;;
        "open"|"o")
            openSelectedRecord;;
        "+1"|"1")
            plusOnePoint +1
            checkStatus
            ;;
        "-1"|"-")
            plusOnePoint -1
            checkStatus
            ;;
        "ranking")
            ranking
            ;;
        "random"|"")
            selectRandomRecord
            checkStatus
            ;;
        "edit"|"e")
            $EDITOR $INDEX;;
        "add"|"a")
            addRecord $2;;
        "delete"|"d")
            checkStatus
            deleteSelectedRecord
            selectRandomRecord
            checkStatus
            ;;
        "help"|"h")
            showHelp;;
        *)
            addRecord $1;;
    esac
}

createFiles() {
    if [ ! -d "$DIRECTORY" ]; then
        mkdir -p $DIRECTORY
    fi
    if [ ! -f "$INDEX" ]; then
        touch $INDEX
    fi
    if [ ! -f "$HEAD" ]; then
        touch $HEAD
    fi
}

checkStatus() {
    head -1 $HEAD | cut -c 42-
}

openSelectedRecord() {
    head -1 $HEAD | sed -E "s/^.*] http/http/" | xargs open
}

ranking() {
    sort -k2 -n -r $INDEX | cut -c 42-
}

addRecord() {
    uri="$1"
    hash=`getHash $uri`

    if [ `isExistHash $hash` == "1" ]; then
        echo "The record already exists."
        selectRecord $hash
        return 0;
    fi
    saveRecord $hash $uri
    echo "A record has been added."
    selectRecord $hash
    checkStatus
}

deleteSelectedRecord() {
    hash=`head -1 $HEAD | cut -d ' ' -f1`
    grep -v $hash $INDEX > $INDEX.old
    cat $INDEX.old > $INDEX
    echo "The record has been deleted."
}

selectRandomRecord() {
    sort -R $INDEX | head -1  > $HEAD
}

plusOnePoint() {
    hash=`head -1 $HEAD | cut -d' ' -f1`
    point=`head -1 $HEAD | cut -d' ' -f2`
    newPoint=$(($point $1))
    sed -i '' "s/$hash $point /$hash $newPoint /" $HEAD
    sed -i '' -E "s/$hash -?[0-9]{1,} /$hash $newPoint /" $INDEX
}

getHash() {
    openssl sha1 <<< $1
}

isExistHash() {
    hash="$1"; grep $hash $INDEX | wc -l | tr -d ' '
}

selectRecord() {
    hash="$1"; grep $hash $INDEX | head -1 > $HEAD
}

saveRecord() {
    hash="$1"; uri="$2"; point="0"
    title=`getTitleFromUri $uri`
    printf "%s %s %s %s\n" $hash $point "[$title]" $uri >> $INDEX
}

getTitleFromUri() {
    uri="$1"
    curl -s $uri | egrep -o '<title[^>]*?>[^<]*?</title>' | head -1 | sed -E 's,</?title[^>]*>,,g;'
}

showHelp() {
    egrep '#{2} usage:' $BASH_SOURCE | sed 's/##//'
    egrep '## \[' $BASH_SOURCE | column -ts'#'
}

main $@

